public class Solution {
    //http://fisherlei.blogspot.com/2013/03/leetcode-palindrome-partitioning-ii.html


    public int minCut(String s) {
        int len = s.length();
        int[] dp = new int[len + 1];
        boolean[][] map = new boolean[len][len];
        
        for(int i = 0; i <= len; i++) 
            dp[i] = len - i;
        
        for(int i = len - 1; i >= 0; i--) {
            for(int j = i; j < len; j++) {
                if(s.charAt(i) == s.charAt(j) && (j - i < 2 || map[i+1][j-1]) ) {
                    map[i][j] = true;
                    dp[i] = dp[i] < (1 + dp[j + 1]) ? dp[i] : (1 + dp[j + 1]) ;
                }
            }
        }
       
        return dp[0] - 1;
    }
}