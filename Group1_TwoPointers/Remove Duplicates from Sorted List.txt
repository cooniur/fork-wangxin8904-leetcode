public class Solution {
    public ListNode deleteDuplicates(ListNode head) {
        ListNode cur = head;
        ListNode prev = head;
        
        while(cur != null) {
            while(cur != null && cur.val == prev.val) cur = cur.next;
            prev.next = cur;
            prev = cur;
        }
        
        return head;
    }
}
————————————————————————————

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode deleteDuplicates(ListNode head) {
        // Note: The Solution object is instantiated only once and is reused by each test case.
        if(head == null) return null;
        
        ListNode cur = head;
        while(true) {
            if(cur.next == null) break;
            
            if(cur.val != cur.next.val) cur = cur.next;
            else {
                cur.next = cur.next.next;
                continue;
            }
        }
        
        return head;
    }
}
