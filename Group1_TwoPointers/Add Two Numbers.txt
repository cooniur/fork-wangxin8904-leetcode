/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        // Note: The Solution object is instantiated only once and is reused by each test case.
        if(l1 == null) return l2;
        if(l2 == null) return l1;
        
        ListNode p1 = l1, p2 = l2;
        int sum = p1.val + p2.val;
        ListNode head = new ListNode(sum % 10);
        p1 = p1.next;
        p2 = p2.next;
        
        int v1 = 0, v2 = 0;
        ListNode cur = head;
        while(p1 != null || p2 != null) {
            if(p1 != null) v1 = p1.val;
            else v1 = 0;
            
            if(p2 != null) v2 =p2.val;
            else v2 = 0;
            
            sum = v1 + v2 + sum/10;
            ListNode temp = new ListNode(sum % 10);
            cur.next = temp;
            cur = cur.next;
        
            if(p1 != null) p1 = p1.next;
            if(p2 != null) p2 = p2.next;
        }
        
        if(sum / 10 > 0) {
            ListNode temp = new ListNode(sum / 10);
            cur.next = temp;
        }
        
        return head;
    }
}