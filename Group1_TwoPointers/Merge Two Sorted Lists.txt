/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
        // Note: The Solution object is instantiated only once and is reused by each test case.
        if(l1 == null) return l2;
        if(l2 == null) return l1;
        
        ListNode head = new ListNode(0);
        
        ListNode cur = head;
        while(l1 != null && l2 != null) {
            if(l1.val <= l2.val) {
            	cur.next = l1;
                l1 = l1.next;
                cur = cur.next;
            } else {
            	cur.next = l2;
                l2 = l2.next;
                cur = cur.next;
            }
        }
        
        if(l1 != null) cur.next = l1;
        if(l2 != null) cur.next = l2;
        
        return head.next;
    }
}