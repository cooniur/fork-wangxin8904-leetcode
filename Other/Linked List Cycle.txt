/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public boolean cycle(ListNode head) {
        if(head == null) return false;
        if(head.next == null) return false;
        
        ListNode fast = head, slow = head;
        
        while(true) {
           
           if(fast.next != null && fast.next.next != null) {
                fast = fast.next.next;
            } else {
                return false;
            }
        
            slow = slow.next;
        
            if(slow == fast) return true;
        }
    }
    
    public boolean hasCycle(ListNode head) {
        return cycle(head);
    }
}