/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    
    public ListNode detectCycle(ListNode head) {
        if(head == null || head.next == null) return null;
        
        ListNode fast = head, slow = head;
        while(true) {
            if(fast.next != null && fast.next.next != null) {
                fast = fast.next.next;
            } else return null;
            
            slow = slow.next;
            if(slow == fast) break;
        }
        
        ListNode dup = head;
        while(dup != slow) {
            dup = dup.next;
            slow = slow.next;
        }
        return dup;
    }
}