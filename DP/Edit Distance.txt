public class Solution {
    private int min(int one, int two, int three) {
        int m = one;
        if(m > two) m = two;
        if(m > three) m = three;
        return m;
    }
    
    public int minDistance(String word1, String word2) {
        
        int[][] dp = new int[word1.length() + 1][word2.length() + 1];
        
        for(int i = 0; i < word1.length() + 1; i++) {
            dp[i][0] = i;
        }
        for(int i = 0; i < word2.length() + 1; i++) {
            dp[0][i] = i;
        }
        
        for(int i = 1; i < word1.length() + 1; i++) {
            for(int j = 1; j < word2.length() + 1; j++) {
                if(word1.charAt(i - 1) == word2.charAt(j - 1)) {
                    dp[i][j] = min(dp[i - 1][j -1], dp[i][j - 1] + 1, dp[i - 1][j] + 1);
                } else {
                    dp[i][j] = min(dp[i - 1][j -1] + 1, dp[i][j - 1] + 1, dp[i - 1][j] + 1);
                }
            }
        }
        
        return dp[word1.length()][word2.length()];
    }
}