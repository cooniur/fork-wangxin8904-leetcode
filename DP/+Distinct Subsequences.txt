public class Solution {
    // http://blog.csdn.net/abcbc/article/details/8978146
    // http://fisherlei.blogspot.com/2012/12/leetcode-distinct-subsequences_19.html
    public int numDistinct(String S, String T) {
        int[][] dp = new int[T.length() + 1][S.length() + 1];
        dp[0][0] = 1;
        for(int i = 1; i < T.length() + 1; i++ )
            dp[i][0] = 0;
        for(int i = 1; i < S.length() + 1; i++)
            dp[0][i] = 1;
            
        for(int i = 1; i < T.length() + 1; i++) {
            for(int j = 1; j < S.length() + 1; j++) {
                dp[i][j] = dp[i][j - 1];
                if(T.charAt(i - 1) == S.charAt(j - 1))
                    dp[i][j] += dp[i - 1][j - 1];
            }
        }
        
        return dp[T.length()][S.length()];
    }
}